@startuml
'https://plantuml.com/class-diagram
title Enemy Class Diagram
header Version 1.0 - Documentation
footer Diagram generated on: 2024-05-10

package Enemy {
    class Enemy {
        +noiseValue : double
        -health : int
    }

    class EnemyControlSystem {
        +process(GameData gameData, World world) : void
        -getBulletSPIs() : Collection<? extends BulletSPI>
        +createEnemy(Entity e, GameData gameData) : Entity
        -softNoise(Enemy e) : void
    }
    EnemyControlSystem --> Enemy

    class EnemyPlugin {
        -enemy : Entity

        +EnemyPlugin()
        +start(GameData gameData, World world) : void
        -createEnemyShip(GameData gameData) : Entity
        +stop(GameData gameData, World world) : void
    }
    EnemyPlugin --> Enemy
}
Enemy ..> Common
Enemy.Enemy --|> Common.Entity
Enemy.EnemyControlSystem ..|> Common.IEntityProcessingService
EnemyControlSystem --> CommonBullet.BulletSPI
Enemy.EnemyPlugin ..|> Common.IGamePluginService

package Common {
    interface IEntityProcessingService {
        +process(GameData gameData, World world) : void
    }

    interface IGamePluginService {
        +start(GameData gameData, World world) : void
        +stop(GameData gameData, World world) : void
    }

    class Entity {
        -ID : UUID
        -polygonCoordinates : double[]
        -x : double
        -y : double
        -rotation : double
        -health : int
        -radius : double
        -damageTimer : int

        +getID() : String
        +setPolygonCoordinates(double... coordinates) : void
        +getPolygonCoordinates() : double[]
        +setX(double x) : void
        +getX() : double
        +setY(double y) : void
        +getY() : double
        +setRotation(double rotation) : void
        +getRotation() : double
        +setHealth(int health) : void
        +getHealth() : int
        +setDamageTimer(int damageTimer) : void
        +getDamageTimer() : int
        +setRadius(double radius) : void
        +getRadius() : double
    }
}

package CommonBullet {
    class Bullet {
        +timer : int
    }

    interface BulletSPI {
        +createBullet(Entity e, GameData gameData) : Entity
    }
    BulletSPI --> Bullet
}
CommonBullet ....> Common
CommonBullet.Bullet --|> Common.Entity
CommonBullet ..> Enemy : Dependency Injection

'https://stackoverflow.com/questions/54882822/plantuml-class-diagram-field-method-visibility-in-legend
skinparam legendBackgroundColor #ffffff,
legend top left
**Legend**
|=   field |= method |=  |
|      <img:http://s.plantuml.com/private-field.png>      |      <img:http://s.plantuml.com/private-method.png>     | Private |
|      <img:http://s.plantuml.com/protected-field.png>    |      <img:http://s.plantuml.com/protected-method.png>   | Protected |
|      <img:http://s.plantuml.com/package-private-field.png>      |      <img:http://s.plantuml.com/package-private-method.png>    | Package Private |
|      <img:http://s.plantuml.com/public-field.png>      |      <img:http://s.plantuml.com/public-method.png>     | Public |
'https://www.youtube.com/watch?v=pYvL31l-hoY&ab_channel=Randomcode
<img:https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Uml_classes_en.svg/230px-Uml_classes_en.svg.png>

end legend

@enduml